{"ast":null,"code":"var _jsxFileName = \"/Users/amiel.suarez/Desktop/Micmic/Lungs/src/app.js\";\nimport React, { Component } from 'react';\nimport 'Src/main.css';\nimport WordCloud from 'Src/wordcloud2';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      var MASK_CANVAS, WORDS_RENDERED;\n      var divContainer = document.querySelector(\".container\");\n      var divCanvas = document.querySelector(\"#canvas\");\n      var divImgCanvas = document.querySelector(\"#img-canvas\");\n      var divHtmlCanvas = document.querySelector(\"#html-canvas\");\n\n      function readMask(callback) {\n        MASK_CANVAS = null;\n        var img = new Image();\n        img.crossOrigin = \"Anonymous\";\n        img.src = MASK_BASE_64;\n\n        img.onload = function readPixels() {\n          window.URL.revokeObjectURL(MASK_BASE_64);\n          MASK_CANVAS = document.createElement('canvas');\n          MASK_CANVAS.width = img.width;\n          MASK_CANVAS.height = img.height;\n          var ctx = MASK_CANVAS.getContext('2d');\n          ctx.drawImage(img, 0, 0, img.width, img.height);\n          var imageData = ctx.getImageData(0, 0, MASK_CANVAS.width, MASK_CANVAS.height);\n          var newImageData = ctx.createImageData(imageData);\n\n          for (var i = 0; i < imageData.data.length; i += 4) {\n            var tone = imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2];\n            var alpha = imageData.data[i + 3];\n\n            if (alpha < 128 || tone > 128 * 3) {\n              // Area not to draw\n              newImageData.data[i] = newImageData.data[i + 1] = newImageData.data[i + 2] = 255;\n              newImageData.data[i + 3] = 0;\n            } else {\n              // Area to draw\n              newImageData.data[i] = newImageData.data[i + 1] = newImageData.data[i + 2] = 0;\n              newImageData.data[i + 3] = 255;\n            }\n          }\n\n          ctx.putImageData(newImageData, 0, 0);\n          callback();\n        };\n      }\n\n      ;\n\n      function run(customList) {\n        WORDS_RENDERED = 0;\n        var runConfig = generateConfig(); // devicePixelRatio\n\n        var devicePixelRatio = parseFloat(1); // Set the width and height\n\n        var width = divContainer.offsetWidth;\n        var height = divContainer.offsetHeight;\n        var pixelWidth = width;\n        var pixelHeight = height;\n\n        if (devicePixelRatio !== 1) {\n          divCanvas.style.width = width + 'px';\n          divCanvas.style.height = height + 'px';\n          pixelWidth *= devicePixelRatio;\n          pixelHeight *= devicePixelRatio;\n        } else {\n          divCanvas.style.width = '';\n          divCanvas.style.height = '';\n        }\n\n        divCanvas.setAttribute('width', pixelWidth);\n        divCanvas.setAttribute('height', pixelHeight);\n        divHtmlCanvas.style.width = pixelWidth + 'px';\n        divHtmlCanvas.style.height = pixelHeight + 'px';\n\n        if (customList) {\n          runConfig.list = customList;\n        }\n\n        if (devicePixelRatio !== 1) {\n          if (!('gridSize' in runConfig)) {\n            runConfig.gridSize = 8;\n          }\n\n          runConfig.gridSize *= devicePixelRatio;\n\n          if (runConfig.origin) {\n            if (typeof runConfig.origin[0] == 'number') runConfig.origin[0] *= devicePixelRatio;\n            if (typeof runConfig.origin[1] == 'number') runConfig.origin[1] *= devicePixelRatio;\n          }\n\n          if (!('weightFactor' in runConfig)) {\n            runConfig.weightFactor = 1;\n          }\n\n          if (typeof runConfig.weightFactor == 'function') {\n            var origWeightFactor = runConfig.weightFactor;\n\n            runConfig.weightFactor = function weightFactorDevicePixelRatioWrap() {\n              return origWeightFactor.apply(this, arguments) * devicePixelRatio;\n            };\n          } else {\n            runConfig.weightFactor *= devicePixelRatio;\n          }\n        }\n\n        if (MASK_CANVAS) {\n          runConfig.clearCanvas = false;\n          /* Determine bgPixel by creating\n          another canvas and fill the specified background color. */\n\n          var bctx = document.createElement('canvas').getContext('2d');\n          bctx.fillStyle = runConfig.backgroundColor || '#fff';\n          bctx.fillRect(0, 0, 1, 1);\n          var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n          var MASK_CANVASScaled = document.createElement('canvas');\n          MASK_CANVASScaled.width = divCanvas.getAttribute(\"width\");\n          MASK_CANVASScaled.height = divCanvas.getAttribute(\"height\");\n          var ctx = MASK_CANVASScaled.getContext('2d');\n          ctx.drawImage(MASK_CANVAS, 0, 0, MASK_CANVAS.width, MASK_CANVAS.height, 0, 0, MASK_CANVASScaled.width, MASK_CANVASScaled.height);\n          var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          var newImageData = ctx.createImageData(imageData);\n\n          for (var i = 0; i < imageData.data.length; i += 4) {\n            if (imageData.data[i + 3] > 128) {\n              newImageData.data[i] = bgPixel[0];\n              newImageData.data[i + 1] = bgPixel[1];\n              newImageData.data[i + 2] = bgPixel[2];\n              newImageData.data[i + 3] = bgPixel[3];\n            } else {\n              // This color must not be the same w/ the bgPixel.\n              newImageData.data[i] = bgPixel[0];\n              newImageData.data[i + 1] = bgPixel[1];\n              newImageData.data[i + 2] = bgPixel[2];\n              newImageData.data[i + 3] = bgPixel[3] ? bgPixel[3] - 1 : 0;\n            }\n          }\n\n          ctx.putImageData(newImageData, 0, 0);\n          ctx = divCanvas.getContext('2d');\n          ctx.drawImage(MASK_CANVASScaled, 0, 0);\n          MASK_CANVASScaled = ctx = imageData = newImageData = bctx = bgPixel = undefined;\n        } // Always manually clean up the html output\n\n\n        if (!runConfig.clearCanvas) {\n          divHtmlCanvas.innerHTML = '';\n          divHtmlCanvas.style.backgroundColor = runConfig.backgroundColor || '#fff';\n        } // All set, call the WordCloud()\n        // Order matters here because the HTML canvas might by\n        // set to display: none.\n\n\n        WordCloud([divCanvas, divHtmlCanvas], runConfig);\n        divCanvas.addEventListener(\"wordclouddrawn\", function (test) {\n          WORDS_RENDERED++;\n\n          if (WORDS_RENDERED === runConfig.list.length) {\n            setTimeout(() => {\n              var pngUrl = divCanvas.toDataURL();\n              divImgCanvas.src = String(pngUrl);\n              divCanvas.style.opacity = 0;\n            }, 750);\n          }\n        });\n      }\n\n      ;\n      readMask(() => {\n        run();\n      });\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"img-canvas\",\n      src: \"\",\n      class: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"canvas\", {\n      id: \"canvas\",\n      class: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"html-canvas\",\n      class: \"canvas hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amiel.suarez/Desktop/Micmic/Lungs/src/app.js"],"names":["React","Component","WordCloud","App","constructor","props","componentDidMount","MASK_CANVAS","WORDS_RENDERED","divContainer","document","querySelector","divCanvas","divImgCanvas","divHtmlCanvas","readMask","callback","img","Image","crossOrigin","src","MASK_BASE_64","onload","readPixels","window","URL","revokeObjectURL","createElement","width","height","ctx","getContext","drawImage","imageData","getImageData","newImageData","createImageData","i","data","length","tone","alpha","putImageData","run","customList","runConfig","generateConfig","devicePixelRatio","parseFloat","offsetWidth","offsetHeight","pixelWidth","pixelHeight","style","setAttribute","list","gridSize","origin","weightFactor","origWeightFactor","weightFactorDevicePixelRatioWrap","apply","arguments","clearCanvas","bctx","fillStyle","backgroundColor","fillRect","bgPixel","MASK_CANVASScaled","getAttribute","canvas","undefined","innerHTML","addEventListener","test","setTimeout","pngUrl","toDataURL","String","opacity","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'Src/main.css'\nimport WordCloud from 'Src/wordcloud2';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n    }\n\n    componentDidMount = () => {\n        var MASK_CANVAS, WORDS_RENDERED;\n        \n        var divContainer = document.querySelector(\".container\");\n        var divCanvas = document.querySelector(\"#canvas\");\n        var divImgCanvas = document.querySelector(\"#img-canvas\");\n        var divHtmlCanvas = document.querySelector(\"#html-canvas\");\n\n        function readMask(callback) {\n            MASK_CANVAS = null;\n\n            var img = new Image();\n            img.crossOrigin = \"Anonymous\";\n            img.src = MASK_BASE_64;\n\n            img.onload = function readPixels() {\n                window.URL.revokeObjectURL(MASK_BASE_64);\n\n                MASK_CANVAS = document.createElement('canvas');\n                MASK_CANVAS.width = img.width;\n                MASK_CANVAS.height = img.height;\n\n                var ctx = MASK_CANVAS.getContext('2d');\n                ctx.drawImage(img, 0, 0, img.width, img.height);\n\n                var imageData = ctx.getImageData(\n                    0, 0, MASK_CANVAS.width, MASK_CANVAS.height);\n                var newImageData = ctx.createImageData(imageData);\n\n                for (var i = 0; i < imageData.data.length; i += 4) {\n                    var tone = imageData.data[i] +\n                        imageData.data[i + 1] +\n                        imageData.data[i + 2];\n                    var alpha = imageData.data[i + 3];\n\n                    if (alpha < 128 || tone > 128 * 3) {\n                        // Area not to draw\n                        newImageData.data[i] =\n                            newImageData.data[i + 1] =\n                            newImageData.data[i + 2] = 255;\n                        newImageData.data[i + 3] = 0;\n                    } else {\n                        // Area to draw\n                        newImageData.data[i] =\n                            newImageData.data[i + 1] =\n                            newImageData.data[i + 2] = 0;\n                        newImageData.data[i + 3] = 255;\n                    }\n                }\n\n                ctx.putImageData(newImageData, 0, 0);\n                callback()\n            };\n        };\n\n    function run(customList) {\n            WORDS_RENDERED = 0;\n            var runConfig = generateConfig();\n\n            // devicePixelRatio\n            var devicePixelRatio = parseFloat(1);\n\n            // Set the width and height\n            var width = divContainer.offsetWidth;\n            var height = divContainer.offsetHeight;\n            var pixelWidth = width;\n            var pixelHeight = height;\n\n            if (devicePixelRatio !== 1) {\n                divCanvas.style.width = width + 'px';\n                divCanvas.style.height = height + 'px';\n\n                pixelWidth *= devicePixelRatio;\n                pixelHeight *= devicePixelRatio;\n            } else {\n                divCanvas.style.width = '';\n                divCanvas.style.height = '';\n            }\n\n            divCanvas.setAttribute('width', pixelWidth);\n            divCanvas.setAttribute('height', pixelHeight);\n\n            divHtmlCanvas.style.width = pixelWidth + 'px';\n            divHtmlCanvas.style.height = pixelHeight + 'px';\n\n            if (customList){runConfig.list = customList}\n\n            if (devicePixelRatio !== 1) {\n                if (!('gridSize' in runConfig)) {\n                    runConfig.gridSize = 8;\n                }\n                runConfig.gridSize *= devicePixelRatio;\n\n                if (runConfig.origin) {\n                    if (typeof runConfig.origin[0] == 'number')\n                        runConfig.origin[0] *= devicePixelRatio;\n                    if (typeof runConfig.origin[1] == 'number')\n                        runConfig.origin[1] *= devicePixelRatio;\n                }\n\n                if (!('weightFactor' in runConfig)) {\n                    runConfig.weightFactor = 1;\n                }\n                if (typeof runConfig.weightFactor == 'function') {\n                    var origWeightFactor = runConfig.weightFactor;\n                    runConfig.weightFactor =\n                        function weightFactorDevicePixelRatioWrap() {\n                            return origWeightFactor.apply(this, arguments) * devicePixelRatio;\n                        };\n                } else {\n                    runConfig.weightFactor *= devicePixelRatio;\n                }\n            }\n\n        \n            if (MASK_CANVAS) {\n                runConfig.clearCanvas = false;\n\n                /* Determine bgPixel by creating\n                another canvas and fill the specified background color. */\n                var bctx = document.createElement('canvas').getContext('2d');\n\n                bctx.fillStyle = runConfig.backgroundColor || '#fff';\n                bctx.fillRect(0, 0, 1, 1);\n                var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n\n                var MASK_CANVASScaled = document.createElement('canvas');\n                MASK_CANVASScaled.width = divCanvas.getAttribute(\"width\");\n                MASK_CANVASScaled.height = divCanvas.getAttribute(\"height\");\n                var ctx = MASK_CANVASScaled.getContext('2d');\n\n                ctx.drawImage(MASK_CANVAS,  0, 0, MASK_CANVAS.width, MASK_CANVAS.height, 0, 0, MASK_CANVASScaled.width, MASK_CANVASScaled.height);\n\n                var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n                var newImageData = ctx.createImageData(imageData);\n                for (var i = 0; i < imageData.data.length; i += 4) {\n                    if (imageData.data[i + 3] > 128) {\n                        newImageData.data[i] = bgPixel[0];\n                        newImageData.data[i + 1] = bgPixel[1];\n                        newImageData.data[i + 2] = bgPixel[2];\n                        newImageData.data[i + 3] = bgPixel[3];\n                    } else {\n                        // This color must not be the same w/ the bgPixel.\n                        newImageData.data[i] = bgPixel[0];\n                        newImageData.data[i + 1] = bgPixel[1];\n                        newImageData.data[i + 2] = bgPixel[2];\n                        newImageData.data[i + 3] = bgPixel[3] ? (bgPixel[3] - 1) : 0;\n                    }\n                }\n\n                ctx.putImageData(newImageData, 0, 0);\n\n                ctx = divCanvas.getContext('2d');\n                ctx.drawImage(MASK_CANVASScaled, 0, 0);\n\n                MASK_CANVASScaled = ctx = imageData = newImageData = bctx = bgPixel = undefined;\n            }\n\n            // Always manually clean up the html output\n            if (!runConfig.clearCanvas) {\n                divHtmlCanvas.innerHTML = '';\n                divHtmlCanvas.style.backgroundColor =  runConfig.backgroundColor || '#fff';\n            }\n\n            // All set, call the WordCloud()\n            // Order matters here because the HTML canvas might by\n            // set to display: none.\n            WordCloud([divCanvas, divHtmlCanvas], runConfig);\n\n            divCanvas.addEventListener(\"wordclouddrawn\", function(test){\n                WORDS_RENDERED++;\n                if (WORDS_RENDERED === runConfig.list.length){\n                    setTimeout(() => {\n                        var pngUrl = divCanvas.toDataURL(); \n                        divImgCanvas.src = String(pngUrl);\n                        divCanvas.style.opacity = 0;\n                    },750)\n                }\n            });\n        };\n\n        readMask(() => {\n            run();\n        });\n    }\n\n    render() {\n        return (<div class=\"container\">\n            <img id=\"img-canvas\" src=\"\" class=\"canvas\" />\n            <canvas id=\"canvas\" class=\"canvas\" ></canvas>\n            <div id=\"html-canvas\" class=\"canvas hide\"></div>\n        </div>)\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}