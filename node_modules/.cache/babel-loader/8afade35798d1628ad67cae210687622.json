{"ast":null,"code":"const GenerateConfig = () => {\n  var wordList = 'thick,stage,spoon,trite,crate,undress,skate,dangerous,count,gruesome,cactus,spot,green,move,sea,murder,amazing,punishment,harsh,fear,majestic,dysfunctional,attraction,hapless,purring,trick,historical,tenuous,fallacious,lighten,manage,ignore,report,need,mass,store,tooth,detailed,huge,story,anger,lethal,wriggle,tug,naive,yell,hot,ambiguous,tart,whirl,silly,grip,respect,clip,disturbed,teeny-tiny,drain,second-hand,careless,wobble,obsequious,boundless,melt,smell,way,fair,scandalous,nutritious,onerous,tricky,defeated,normal,flower,taste,color,colour,cross,wide-eyed,mature,death,symptomatic,parched,adaptable,ban,reading,need,cellar,hesitant,tiresome,idea,dreary,brawny,trap,tasteless,grate,unite,basket,nest,ethereal,sack';\n  var rawList = [];\n  var nums = [5, 4.5, 3.5];\n  var words = wordList.split(',');\n  nums.forEach(function (n) {\n    words.forEach(function (w) {\n      rawList.push(n + ' ' + w);\n    });\n  });\n  var stringList = rawList.join('\\n');\n  var loopList = stringList.split('\\n');\n  var wordcloudList = [];\n  loopList.forEach((line, i) => {\n    var lineArr = line.split(' ');\n    var count = parseFloat(lineArr.shift()) || 0;\n    wordcloudList.push([lineArr.join(' '), count]);\n  });\n  var canvasWidth = document.querySelector(\"#canvas\").offsetWidth;\n  return {\n    list: wordcloudList,\n    frame: wordcloudList,\n    shuffle: 0,\n    gridSize: Math.round(16 * canvasWidth / 1024),\n    fontFamily: \"Times, serif\",\n    rotateRatio: 0.5,\n    rotationSteps: 2,\n    backgroundColor: \"#ffe0e0\",\n    color: function (word, weight) {\n      return word === \"ow\" || word === \"le\" || word === \"spoonerinoaaaaaaaaa\" ? \"#f02222\" : \"#c09292\";\n    },\n    weightFactor: function (size) {\n      return Math.pow(size, 2.3) * canvasWidth / 1024;\n    }\n  };\n};\n\nexport default GenerateConfig;","map":{"version":3,"sources":["/Users/amiel.suarez/Desktop/Micmic/Lungs/src/config.js"],"names":["GenerateConfig","wordList","rawList","nums","words","split","forEach","n","w","push","stringList","join","loopList","wordcloudList","line","i","lineArr","count","parseFloat","shift","canvasWidth","document","querySelector","offsetWidth","list","frame","shuffle","gridSize","Math","round","fontFamily","rotateRatio","rotationSteps","backgroundColor","color","word","weight","weightFactor","size","pow"],"mappings":"AAAA,MAAMA,cAAc,GAAG,MAAM;AACzB,MAAIC,QAAQ,GAAG,otBAAf;AAEA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,IAAI,GAAG,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,CAAX;AACA,MAAIC,KAAK,GAAGH,QAAQ,CAACI,KAAT,CAAe,GAAf,CAAZ;AAEAF,EAAAA,IAAI,CAACG,OAAL,CAAa,UAAUC,CAAV,EAAa;AACtBH,IAAAA,KAAK,CAACE,OAAN,CAAc,UAAUE,CAAV,EAAa;AACvBN,MAAAA,OAAO,CAACO,IAAR,CAAaF,CAAC,GAAG,GAAJ,GAAUC,CAAvB;AACH,KAFD;AAGH,GAJD;AAMA,MAAIE,UAAU,GAAGR,OAAO,CAACS,IAAR,CAAa,IAAb,CAAjB;AACA,MAAIC,QAAQ,GAAGF,UAAU,CAACL,KAAX,CAAiB,IAAjB,CAAf;AAEA,MAAIQ,aAAa,GAAG,EAApB;AACAD,EAAAA,QAAQ,CAACN,OAAT,CAAiB,CAACQ,IAAD,EAAOC,CAAP,KAAa;AAC1B,QAAIC,OAAO,GAAGF,IAAI,CAACT,KAAL,CAAW,GAAX,CAAd;AACA,QAAIY,KAAK,GAAGC,UAAU,CAACF,OAAO,CAACG,KAAR,EAAD,CAAV,IAA+B,CAA3C;AACAN,IAAAA,aAAa,CAACJ,IAAd,CAAmB,CAACO,OAAO,CAACL,IAAR,CAAa,GAAb,CAAD,EAAoBM,KAApB,CAAnB;AACH,GAJD;AAMA,MAAIG,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCC,WAApD;AAEA,SAAO;AACHC,IAAAA,IAAI,EAAEX,aADH;AAEHY,IAAAA,KAAK,EAAEZ,aAFJ;AAIHa,IAAAA,OAAO,EAAE,CAJN;AAKHC,IAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAW,KAAKT,WAAL,GAAmB,IAA9B,CALP;AAMHU,IAAAA,UAAU,EAAE,cANT;AAOHC,IAAAA,WAAW,EAAE,GAPV;AAQHC,IAAAA,aAAa,EAAE,CARZ;AASHC,IAAAA,eAAe,EAAE,SATd;AAWHC,IAAAA,KAAK,EAAE,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAC3B,aAAQD,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,IAA1B,IAAkCA,IAAI,KAAK,qBAA5C,GAAqE,SAArE,GAAiF,SAAxF;AACH,KAbE;AAcHE,IAAAA,YAAY,EAAE,UAAUC,IAAV,EAAgB;AAC1B,aAAOV,IAAI,CAACW,GAAL,CAASD,IAAT,EAAe,GAAf,IAAsBlB,WAAtB,GAAoC,IAA3C;AACH;AAhBE,GAAP;AAkBH,CA3CD;;AA6CA,eAAepB,cAAf","sourcesContent":["const GenerateConfig = () => {\n    var wordList = 'thick,stage,spoon,trite,crate,undress,skate,dangerous,count,gruesome,cactus,spot,green,move,sea,murder,amazing,punishment,harsh,fear,majestic,dysfunctional,attraction,hapless,purring,trick,historical,tenuous,fallacious,lighten,manage,ignore,report,need,mass,store,tooth,detailed,huge,story,anger,lethal,wriggle,tug,naive,yell,hot,ambiguous,tart,whirl,silly,grip,respect,clip,disturbed,teeny-tiny,drain,second-hand,careless,wobble,obsequious,boundless,melt,smell,way,fair,scandalous,nutritious,onerous,tricky,defeated,normal,flower,taste,color,colour,cross,wide-eyed,mature,death,symptomatic,parched,adaptable,ban,reading,need,cellar,hesitant,tiresome,idea,dreary,brawny,trap,tasteless,grate,unite,basket,nest,ethereal,sack';\n\n    var rawList = [];\n    var nums = [5, 4.5, 3.5];\n    var words = wordList.split(',');\n\n    nums.forEach(function (n) {\n        words.forEach(function (w) {\n            rawList.push(n + ' ' + w);\n        });\n    });\n\n    var stringList = rawList.join('\\n');\n    var loopList = stringList.split('\\n');\n\n    var wordcloudList = [];\n    loopList.forEach((line, i) => {\n        var lineArr = line.split(' ');\n        var count = parseFloat(lineArr.shift()) || 0;\n        wordcloudList.push([lineArr.join(' '), count]);\n    });\n\n    var canvasWidth = document.querySelector(\"#canvas\").offsetWidth;\n\n    return {\n        list: wordcloudList,\n        frame: wordcloudList,\n\n        shuffle: 0,\n        gridSize: Math.round(16 * canvasWidth / 1024),\n        fontFamily: \"Times, serif\",\n        rotateRatio: 0.5,\n        rotationSteps: 2,\n        backgroundColor: \"#ffe0e0\",\n\n        color: function (word, weight) {\n            return (word === \"ow\" || word === \"le\" || word === \"spoonerinoaaaaaaaaa\") ? \"#f02222\" : \"#c09292\";\n        },\n        weightFactor: function (size) {\n            return Math.pow(size, 2.3) * canvasWidth / 1024;\n        },\n    }\n}\n\nexport default GenerateConfig;"]},"metadata":{},"sourceType":"module"}